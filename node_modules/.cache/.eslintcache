[{"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\App.jsx":"2","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\EditNote.jsx":"3","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\Notes.jsx":"4","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\CreateNote.jsx":"5","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\dummy_notes.js":"6","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\components\\NoteItem.jsx":"7","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\components\\useCreateDate.jsx":"8"},{"size":182,"mtime":1676387093830,"results":"9","hashOfConfig":"10"},{"size":950,"mtime":1676561517712,"results":"11","hashOfConfig":"10"},{"size":1978,"mtime":1676561795939,"results":"12","hashOfConfig":"10"},{"size":2158,"mtime":1676543047863,"results":"13","hashOfConfig":"10"},{"size":1402,"mtime":1676561776733,"results":"14","hashOfConfig":"10"},{"size":10470,"mtime":1676388792812,"results":"15","hashOfConfig":"10"},{"size":385,"mtime":1676397834595,"results":"16","hashOfConfig":"10"},{"size":318,"mtime":1676470518512,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"6ntw9j",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\index.js",[],[],[],"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\App.jsx",["46"],[],"import { BrowserRouter,Routes,Route } from \"react-router-dom\";\r\nimport CreateNote from \"./pages/CreateNote\";\r\nimport EditNote from \"./pages/EditNote\";\r\nimport Notes from \"./pages/Notes\";\r\nimport dummyNotes from './dummy_notes';\r\nimport { useState,useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [ notes,setNotes ] = useState(JSON.parse(localStorage.getItem('notes')) || []);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('notes',JSON.stringify(notes));\r\n  }, [notes]);\r\n  \r\n\r\n  return (\r\n     <main id=\"app\">\r\n         <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/react-notes\" element={<Notes notes={notes}/>} />\r\n                <Route path=\"/create-note\" element = {<CreateNote setNotes={setNotes}/>} />\r\n                <Route path=\"/edit-note/:id\" element = {<EditNote notes={notes} setNotes={setNotes}/>} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n     </main>\r\n  )\r\n}\r\n\r\nexport default App","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\EditNote.jsx",["47"],[],"import { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { IoIosArrowBack } from 'react-icons/io';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { useState } from \"react\";\r\nimport useCreateDate from \"../components/useCreateDate\";\r\n\r\nconst EditNote = ({notes,setNotes}) => {\r\n  const {id} = useParams();\r\n  const note = notes.find((item) => item.id===id);\r\n  \r\n\r\n  const [title,setTitle] = useState(note.title);\r\n  const [details,setDetails] = useState(note.details);\r\n  const date = useCreateDate();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSave = (e) =>{\r\n    e.preventDefault();\r\n    if(title && details){\r\n      const newNote = {...note,title,details,date};\r\n     \r\n      const newNotes = notes.map((item) =>{\r\n        if(item.id === id){\r\n          item = newNote; \r\n        }\r\n        return item;\r\n      })\r\n      setNotes(newNotes);\r\n    }\r\n    navigate('/react-notes');\r\n  }\r\n\r\n  const handleDelete = (e) =>{\r\n\r\n    //to confirm deletion,\r\n    if(window.confirm(\"Are you sure you want to delete?\")){\r\n      e.preventDefault();\r\n      const deletedNotes = notes.filter(item => item.id!= id);\r\n      setNotes(deletedNotes);\r\n      navigate('/react-notes');\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <section>\r\n      <header className=\"create-note__header\">\r\n        <Link to=\"/\" className=\"btn\">\r\n          <IoIosArrowBack />\r\n        </Link>\r\n        <button className=\"btn lg primary\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"btn lg anger\" onClick={handleDelete}>\r\n          <RiDeleteBin6Line />\r\n        </button>\r\n      </header>\r\n      <form action=\"\" className=\"create-note__form\" onSubmit={handleSave}>\r\n        <input type=\"text\"placeholder=\"Title\" value={title} autoFocus onChange={(e)=>setTitle(e.target.value)}/>\r\n        <textarea rows=\"28\" value={details} onChange={(e)=>setDetails(e.target.value)}></textarea>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default EditNote;","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\Notes.jsx",["48"],[],"import React, { useState,useEffect } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport {    BsPlusLg } from 'react-icons/bs';\r\nimport NoteItem from '../components/NoteItem';\r\n\r\nconst Notes = ({notes}) => {\r\n\r\n  const [searchShow,setSearchShow] = useState(false);\r\n  const showSearch = () =>{\r\n    setSearchShow(!searchShow);\r\n  }\r\n\r\n  const [searchText,setSearchText] = useState('');\r\n  const [filteredNotes,setFilteredNotes] = useState(notes);\r\n\r\n  const handleSearch = () =>{\r\n    // you can give e.target.value here, but the problem is, as we are calling useeffect, the function will run when the page loads,\r\n    //so \"e\" will be undefined at first. Hence it causes an issue. \r\n    //Therefore e.target is moved to the onchange jsx.\r\n    setFilteredNotes(notes.filter((item)=>{\r\n      return item.title.toLowerCase().match(searchText.toLowerCase());\r\n    }))\r\n\r\n  }\r\n\r\n  //if use effect is not used, when search text is inputted, \r\n // the search operation will take place. But when you start deleting the search Text, the search will not take place. Hence useeffect \r\n //is used \r\n  useEffect(handleSearch,[searchText]);\r\n\r\n  return (\r\n    <section>\r\n        <header className=\"notes__header\">\r\n            {\r\n              !searchShow && <h2>My Notes</h2>\r\n            }\r\n            {\r\n             searchShow && <input type=\"text\" value={searchText} onChange={(e)=>{setSearchText(e.target.value);handleSearch();}} autoFocus placeholder='Keyword...'/> \r\n            }\r\n             \r\n            <button className='btn' onClick={showSearch}>\r\n              {searchShow ? <MdClose /> : <FaSearch />}</button>\r\n        </header>\r\n        <div className=\"notes__container\">\r\n            {\r\n              filteredNotes.length === 0 && <p className='empty__Notes'>No Notes Found</p>\r\n            }\r\n            {\r\n                filteredNotes.map((note) => <NoteItem key={note.id} note={note}/>)\r\n            }\r\n        </div>\r\n\r\n        <Link className='btn add__btn' to=\"/create-note\"><BsPlusLg /></Link>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Notes","C:\\Users\\ASUS\\Desktop\\react-notes\\src\\pages\\CreateNote.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\dummy_notes.js",[],[],"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\components\\NoteItem.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\react-notes\\src\\components\\useCreateDate.jsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":38,"column":56,"nodeType":"55","messageId":"56","endLine":38,"endColumn":58},{"ruleId":"57","severity":1,"message":"58","line":31,"column":26,"nodeType":"59","endLine":31,"endColumn":38,"suggestions":"60"},"no-unused-vars","'dummyNotes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array. If 'setFilteredNotes' needs the current value of 'notes', you can also switch to useReducer instead of useState and read 'notes' in the reducer.","ArrayExpression",["61"],{"desc":"62","fix":"63"},"Update the dependencies array to be: [notes, searchText]",{"range":"64","text":"65"},[1212,1224],"[notes, searchText]"]